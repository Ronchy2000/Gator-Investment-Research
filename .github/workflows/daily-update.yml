name: Daily Gator Sync

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 (北京时间 08:00)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: gator-daily-sync
  cancel-in-progress: false

jobs:
  crawl-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install chromium
          playwright install-deps

      - name: Stage 1 - Boundary Detection
        run: |
          echo "=== 探测文章边界 (轻量级检查) ==="
          echo "职责: 快速探测边界,写入 last_probed_id 到 index.json"
          python scripts/pre_crawl_check.py

      - name: Stage 2 - Content Download
        run: |
          echo "=== 下载文章内容 (增量更新) ==="
          echo "职责: 从 index.json 读取边界,下载未下载的文章"
          echo "参数说明:"
          echo "  --max-requests 9999: 不限制下载数量,一次性下载所有"
          echo "  --sleep 0.8: 每次请求间隔 0.8 秒"
          python crawler/fetch_reports.py --max-requests 9999 --sleep 0.8
        continue-on-error: true

      - name: Update Documentation Metadata
        run: |
          echo "=== 更新分类 README (包含统计) ==="
          python scripts/update_category_meta.py
          
          echo "=== 生成侧边栏导航 ==="
          python scripts/generate_sidebar.py

      - name: Final Diagnostics
        run: |
          echo "=== 最终状态检查 ==="
          python scripts/diagnose_crawler.py

      - name: Commit Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 检查是否有更改
          if [ -n "$(git status --porcelain)" ]; then
            # 获取新增文章数
            new_files=$(git status --porcelain | grep -c "^?? docs/.*\.md$" || echo "0")
            modified_files=$(git status --porcelain | grep -c "^M " || echo "0")
            
            echo "发现更改: 新增 $new_files 篇, 修改 $modified_files 个文件"
            
            git add -A
            git commit -m "Auto Update: ${new_files} new reports
            
            - New articles: ${new_files}
            - Modified files: ${modified_files}
            - Update time: $(date -u +\"%Y-%m-%d %H:%M:%S UTC\")
            - Triggered by: ${{ github.event_name }}"
            
            git push
            echo "[SUCCESS] Changes committed"
          else
            echo "[INFO] No new changes to commit"
          fi

      - name: Generate Report
        if: always()
        run: |
          echo "=== 运行报告 ==="
          echo "工作流: ${{ github.workflow }}"
          echo "触发事件: ${{ github.event_name }}"
          echo "运行编号: ${{ github.run_number }}"
          echo "运行时间: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo ""
          echo "=== 当前状态 ==="
          python -c "
          import json
          from pathlib import Path
          index = json.load(open('docs/index.json'))
          print(f'已探测: {len(index.get(\"saved_ids\", []))} 篇')
          print(f'已下载: {len(index.get(\"downloaded_ids\", []))} 篇')
          print(f'缺失记录: {len(index.get(\"missing_ids\", []))} 个')
          print(f'下次探测起点: ID {index.get(\"next_probe_id\", 1)}')
          "